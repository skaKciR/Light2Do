@page "/todos"
@inject HttpClient client
@inject IJSRuntime jsRuntime

<div class="mb-1">
    <label class="form-label">Поле для ввода номера телефона</label>
    <input required type="text" id="maskedInput" class="form-control"/>
</div>

<h1>Ваш список задач (@todosList.Count()):</h1>
@if (todosList.Any())
{
    <div class="table-responsive">
        <div class="table-responsive">
            <table class="table table-vcenter border border-3 border-black">
                <thead>
                    <tr>
                        <th class="text-center"><h4>Задача</h4></th>
                        <th class="text-center"><h4>Автор</h4></th>
                        <th class="text-center"><h4>Описание</h4></th>
                        <th class="text-center"><h4>Дата добавления</h4></th>
                        <th class="text-center"><h4>Дедлайн</h4></th>
                        <th class="text-center"><h4>Выполнена</h4></th>
                        <th class="text-center w-1"></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var todoItem in todosList)
                    {

                        <tr style=" @(todoItem.IsDone ? "background-image: linear-gradient(180deg, rgb(5, 39, 103) 0%, #3a0647 70%); color:white" :"")">
                            <td class="text-center"><h5>@todoItem.Title</h5></td>
                            <td class="text-center">
                                <h5>@todoItem.Author</h5>
                            </td>
                            <td class="text-center">
                                <a href="#" class="text-reset" style="display: inline-block; max-width: 150px; overflow: hidden; text-overflow: ellipsis; white-space: nowrap;">
                                    <h5>@todoItem.Description</h5>
                                </a>
                            </td>
                            <td class="text-center">
                                <h5>@todoItem.DateAdded.ToString("dd/MM/yyyy")</h5>
                            </td>
                            <td class="text-center">
                                <h5>@todoItem.DeadLine.ToString("dd/MM/yyyy")</h5>
                            </td>
                            <td class="text-center">
                                <input class="form-check-input align-middle" style="width:1.5em !important;height:1.5em !important" type="checkbox" @bind="todoItem.IsDone" />
                            </td>
                            <td class="text-center">
                                <button class="btn btn-danger m-1" @onclick="() => Delete(todoItem.Id)">Удалить</button>
                            </td>
                        </tr>

                    }
                </tbody>
            </table>
        </div>
    </div>
}
else
{
    <h1>Почему-то тут пусто =(</h1>
}
<div class="modal" style="display: @(showModal ? "block" : "none")">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Добавить новую задачу</h5>
                <button type="button" class="btn-close" @onclick="() => showModal = false"></button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label>Задача</label>
                    <input class="form-control" @bind="newTodo.Title" />
                </div>
                <div class="form-group">
                    <label>Автор</label>
                    <input class="form-control" @bind="newTodo.Author" />
                </div>
                <div class="form-group">
                    <label>Описание</label>
                    <textarea class="form-control" @bind="newTodo.Description"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" @onclick="AddTodo">Добавить</button>
                <button type="button" class="btn btn-secondary" @onclick="() => showModal = false">Отмена</button>
            </div>
        </div>
    </div>
</div>

<div class="d-flex justify-content-end mb-2">
    <button class="btn btn-success" @onclick="() => showModal = true">Добавить</button>
</div>
<TodosSlider Tasks="todosList.Where(x => !x.IsDone).ToList()" />

<div class="container">
    <div class="row justify-content-md-center">
        <div class="col-md-auto">
            <label>Введите номер телефона</label>
            <input type="text" />
        </div>
    </div>
</div>

@code {
    private List<TodoItems> todosList = new List<TodoItems>();
    private TodoItems newTodo = new TodoItems();
    private bool showModal = false;
    private ElementReference phoneNumberInput;

    protected override async Task OnInitializedAsync()
    {
        todosList.Clear();
        Update();
    }

    private async void Delete(Guid Id)
    {
        await client.DeleteAsync("api/Todos/?id=" + Id);
        Update();
    }

    private async Task Update()
    {
        todosList = await client.GetFromJsonAsync<List<TodoItems>>("api/Todos");
        StateHasChanged();
    }

    private async Task AddTodo()
    {
        await client.PostAsJsonAsync("api/Todos", newTodo);

        newTodo = new TodoItems();

        showModal = false;
        Update();
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await jsRuntime.InvokeVoidAsync("setMask", "maskedInput", "+{7}(000)000-00-00");
        }
    }
}
